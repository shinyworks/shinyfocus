[{"path":[]},{"path":"https://r4ds.github.io/shinyfocus/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://r4ds.github.io/shinyfocus/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://r4ds.github.io/shinyfocus/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://r4ds.github.io/shinyfocus/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://r4ds.github.io/shinyfocus/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement jonthegeek@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://r4ds.github.io/shinyfocus/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://r4ds.github.io/shinyfocus/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://r4ds.github.io/shinyfocus/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://r4ds.github.io/shinyfocus/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://r4ds.github.io/shinyfocus/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://r4ds.github.io/shinyfocus/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://r4ds.github.io/shinyfocus/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to shinyfocus","title":"Contributing to shinyfocus","text":"outlines propose change shinyfocus.","code":""},{"path":"https://r4ds.github.io/shinyfocus/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to shinyfocus","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://r4ds.github.io/shinyfocus/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to shinyfocus","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://r4ds.github.io/shinyfocus/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to shinyfocus","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"r4ds/shinyfocus\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://r4ds.github.io/shinyfocus/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to shinyfocus","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://r4ds.github.io/shinyfocus/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to shinyfocus","text":"Please note shinyfocus project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://r4ds.github.io/shinyfocus/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 shinyfocus authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://r4ds.github.io/shinyfocus/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with shinyfocus","title":"Getting help with shinyfocus","text":"Thanks using shinyfocus! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://r4ds.github.io/shinyfocus/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with shinyfocus","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://r4ds.github.io/shinyfocus/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with shinyfocus","text":"Armed reprex, next step figure ask. ’s question: ’s best ask R4DS Online Learning Community Slack. options include Posit Community, StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://r4ds.github.io/shinyfocus/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with shinyfocus","text":"’ll try look issue soon can, packages maintained volunteers. good reprex particularly important might weeks months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://r4ds.github.io/shinyfocus/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jon Harmon. Author, maintainer.","code":""},{"path":"https://r4ds.github.io/shinyfocus/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Harmon J (2023). shinyfocus: Use Browser Focus Events 'shiny'. R package version 0.0.0.9000,  https://r4ds.github.io/shinyfocus/, https://github.com/r4ds/shinyfocus.","code":"@Manual{,   title = {shinyfocus: Use Browser Focus Events in 'shiny'},   author = {Jon Harmon},   year = {2023},   note = {R package version 0.0.0.9000,  https://r4ds.github.io/shinyfocus/},   url = {https://github.com/r4ds/shinyfocus}, }"},{"path":"https://r4ds.github.io/shinyfocus/index.html","id":"shinyfocus","dir":"","previous_headings":"","what":"Use Browser Focus Events in shiny","title":"Use Browser Focus Events in shiny","text":"goal shinyfocus make easy trigger server events {shiny} apps based elements app gaining losing focus browser.","code":""},{"path":"https://r4ds.github.io/shinyfocus/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Use Browser Focus Events in shiny","text":"can install development version shinyfocus GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"r4ds/shinyfocus\")"},{"path":"https://r4ds.github.io/shinyfocus/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Use Browser Focus Events in shiny","text":"’ve envisioned two primary use cases (although hope assume many others): Showing help related input. Validating input user “done” input. app demonstrated . Note: feel like “explanation” output cleaner. ’d like find better way implement “explanatin” output, switch based input selected (rather roundabout double observer). hope update soon!","code":"library(shinyfocus)  ui <- shiny::fluidPage(   shinyfocus_js_dependency(),   shiny::column(     2,     shiny::textInput(\"name\", \"Name:\"),     shiny::textInput(\"title\", \"Title:\")   ),   shiny::column(     2,     shiny::textOutput(\"explanation\")   ) )  server <- function(input, output, session) {   on_focus(     \"name\",     output$explanation <- shiny::renderText({       \"Enter the name you want me to call you. It will be converted to Title Case.\"     })   )      on_focus(     \"title\",     output$explanation <- shiny::renderText({       \"Describe your role in 10 characters or fewer.\"     })   )      on_blur(     \"name\",     shiny::updateTextInput(       inputId = \"name\",       value = stringr::str_to_title(shiny::isolate(input$name))     )   )      on_blur(     \"title\",     {       if (nchar(input$title) > 10) {         shiny::updateTextInput(           inputId = \"title\",           value = paste(             \"Typer of\",             nchar(input$title),             \"Characters\"           )         )       }     }   )    }  shiny::shinyApp(ui, server)"},{"path":"https://r4ds.github.io/shinyfocus/index.html","id":"related-work","dir":"","previous_headings":"","what":"Related Work","title":"Use Browser Focus Events in shiny","text":"{shinyjs} function, onevent(), can used similar functionality. However, implementation different .","code":""},{"path":"https://r4ds.github.io/shinyfocus/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Use Browser Focus Events in shiny","text":"Please note shinyfocus project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://r4ds.github.io/shinyfocus/reference/dot-active_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the active_element from root input — .active_element","title":"Read the active_element from root input — .active_element","text":"Read active_element root input","code":""},{"path":"https://r4ds.github.io/shinyfocus/reference/dot-active_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the active_element from root input — .active_element","text":"","code":".active_element(session = shiny::getDefaultReactiveDomain())"},{"path":"https://r4ds.github.io/shinyfocus/reference/dot-active_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the active_element from root input — .active_element","text":"session session object. Probably always use default.","code":""},{"path":"https://r4ds.github.io/shinyfocus/reference/dot-active_element.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the active_element from root input — .active_element","text":"value shinyfocuspkg-active_element character scalar (NULL).","code":""},{"path":"https://r4ds.github.io/shinyfocus/reference/dot-previous_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the previous_element from root input — .previous_element","title":"Read the previous_element from root input — .previous_element","text":"Read previous_element root input","code":""},{"path":"https://r4ds.github.io/shinyfocus/reference/dot-previous_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the previous_element from root input — .previous_element","text":"","code":".previous_element(session = shiny::getDefaultReactiveDomain())"},{"path":"https://r4ds.github.io/shinyfocus/reference/dot-previous_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the previous_element from root input — .previous_element","text":"session session object. Probably always use default.","code":""},{"path":"https://r4ds.github.io/shinyfocus/reference/dot-previous_element.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the previous_element from root input — .previous_element","text":"value shinyfocuspkg-previous_element character scalar (NULL).","code":""},{"path":"https://r4ds.github.io/shinyfocus/reference/dot-root_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the main session — .root_session","title":"Find the main session — .root_session","text":"function escapes module (submodule, etc) find root session.","code":""},{"path":"https://r4ds.github.io/shinyfocus/reference/dot-root_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the main session — .root_session","text":"","code":".root_session(session = shiny::getDefaultReactiveDomain())"},{"path":"https://r4ds.github.io/shinyfocus/reference/dot-root_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the main session — .root_session","text":"session session object. Probably always use default.","code":""},{"path":"https://r4ds.github.io/shinyfocus/reference/dot-root_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the main session — .root_session","text":"first session \"session_proxy\".","code":""},{"path":"https://r4ds.github.io/shinyfocus/reference/on_blur.html","id":null,"dir":"Reference","previous_headings":"","what":"Respond when input loses focus — on_blur","title":"Respond when input loses focus — on_blur","text":"Set shiny::observeEvent() observer trigger named input loses focus.","code":""},{"path":"https://r4ds.github.io/shinyfocus/reference/on_blur.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Respond when input loses focus — on_blur","text":"","code":"on_blur(   id,   handler_expr,   ...,   priority = 99999,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://r4ds.github.io/shinyfocus/reference/on_blur.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Respond when input loses focus — on_blur","text":"id ID string input. handler_expr expression trigger whenever specified input loses focus. expression quoted executed calling environment. ... Arguments passed shiny::observeEvent label label observer reactive, useful debugging. suspended TRUE, start observer suspended state. FALSE (default), start non-suspended state. autoDestroy TRUE (default), observer automatically destroyed domain () ends. ignoreNULL Whether action triggered (value calculated, case eventReactive) input event expression NULL. See Details. Whether observeEvent immediately destroyed first time code handlerExpr run. pattern useful want subscribe event happen . priority integer controls priority observer executed. often makes sense priority high avoid conflicts. session session (aka domain) observer created executed. default almost always desired.","code":""},{"path":"https://r4ds.github.io/shinyfocus/reference/on_blur.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Respond when input loses focus — on_blur","text":"shiny observer (see shiny::observe()).","code":""},{"path":[]},{"path":"https://r4ds.github.io/shinyfocus/reference/on_blur.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Respond when input loses focus — on_blur","text":"","code":"## Only run examples in interactive R sessions if (interactive()) {   # App 1: A relatively simple ui without modules.   shiny::shinyApp(     ui = shiny::fluidPage(       shinyfocus_js_dependency(),       shiny::textInput(\"input1\", \"Input 1\"),       shiny::textInput(\"input2\", \"Input 2\"),       shiny::actionButton(\"go_button\", \"Go!\"),       shiny::textOutput(\"blurring\")     ),     server = function(input, output, session) {       # Update the value in blurring whenever input1 loses focus.       on_blur(         \"input1\",         output$blurring <- shiny::renderText(           paste(             \"You left input1 at\",             Sys.time()           )         )       )     }   )    # App 2: With module.   blurUI <- function(id) {     shiny::tagList(       shiny::textInput(shiny::NS(id, \"observe_me\"), \"Observe me\"),       shiny::textOutput(NS(id, \"blurring\"))     )   }   blurServer <- function(id) {     shiny::moduleServer(id, function(input, output, session) {       on_blur(         \"observe_me\",         output$blurring <- shiny::renderText(           paste(             \"You left observe_me at\",             Sys.time()           )         )       )     })   }    shiny::shinyApp(     ui = shiny::fluidPage(       shinyfocus_js_dependency(),       blurUI(\"blur_module\"),       shiny::textInput(\"another_input\", \"Another input\"),       shiny::actionButton(\"go_button\", \"Go!\")     ),     server = function(input, output, session) {       blurServer(\"blur_module\")     }   ) }"},{"path":"https://r4ds.github.io/shinyfocus/reference/on_focus.html","id":null,"dir":"Reference","previous_headings":"","what":"Respond when input gains focus — on_focus","title":"Respond when input gains focus — on_focus","text":"Set shiny::observeEvent() observer trigger named input gains focus.","code":""},{"path":"https://r4ds.github.io/shinyfocus/reference/on_focus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Respond when input gains focus — on_focus","text":"","code":"on_focus(   id,   handler_expr,   ...,   priority = 99999,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://r4ds.github.io/shinyfocus/reference/on_focus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Respond when input gains focus — on_focus","text":"id ID string input. handler_expr expression trigger whenever specified input gains focus. expression quoted executed calling environment. ... Arguments passed shiny::observeEvent label label observer reactive, useful debugging. suspended TRUE, start observer suspended state. FALSE (default), start non-suspended state. autoDestroy TRUE (default), observer automatically destroyed domain () ends. ignoreNULL Whether action triggered (value calculated, case eventReactive) input event expression NULL. See Details. Whether observeEvent immediately destroyed first time code handlerExpr run. pattern useful want subscribe event happen . priority integer controls priority observer executed. often makes sense priority high avoid conflicts. session session (aka domain) observer created executed. default almost always desired.","code":""},{"path":"https://r4ds.github.io/shinyfocus/reference/on_focus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Respond when input gains focus — on_focus","text":"shiny observer (see shiny::observe()).","code":""},{"path":[]},{"path":"https://r4ds.github.io/shinyfocus/reference/on_focus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Respond when input gains focus — on_focus","text":"","code":"## Only run examples in interactive R sessions if (interactive()) {   # App 1: A relatively simple ui without modules.   shiny::shinyApp(     ui = shiny::fluidPage(       shinyfocus_js_dependency(),       shiny::textInput(\"input1\", \"Input 1\"),       shiny::textInput(\"input2\", \"Input 2\"),       shiny::actionButton(\"go_button\", \"Go!\"),       shiny::textOutput(\"focusing\")     ),     server = function(input, output, session) {       # Update the value in focusing whenever input1 has focus.       on_focus(         \"input1\",         output$focusing <- shiny::renderText(           paste(             \"You entered input1 at\",             Sys.time()           )         )       )     }   )    # App 2: With module.   focusUI <- function(id) {     shiny::tagList(       shiny::textInput(shiny::NS(id, \"observe_me\"), \"Observe me\"),       shiny::textOutput(NS(id, \"focusing\"))     )   }   focusServer <- function(id) {     shiny::moduleServer(id, function(input, output, session) {       on_focus(         \"observe_me\",         output$focusing <- shiny::renderText(           paste(             \"You entered observe_me at\",             Sys.time()           )         )       )     })   }    shiny::shinyApp(     ui = shiny::fluidPage(       shinyfocus_js_dependency(),       focusUI(\"focus_module\"),       shiny::textInput(\"another_input\", \"Another input\"),       shiny::actionButton(\"go_button\", \"Go!\")     ),     server = function(input, output, session) {       focusServer(\"focus_module\")     }   ) }"},{"path":"https://r4ds.github.io/shinyfocus/reference/on_focus_change.html","id":null,"dir":"Reference","previous_headings":"","what":"Respond when input changes focus — on_focus_change","title":"Respond when input changes focus — on_focus_change","text":"Set shiny::observeEvent() observer trigger named input gains loses focus.","code":""},{"path":"https://r4ds.github.io/shinyfocus/reference/on_focus_change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Respond when input changes focus — on_focus_change","text":"","code":"on_focus_change(   id,   handler_expr,   ...,   change_on = c(\"focus\", \"blur\"),   priority = 99999,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://r4ds.github.io/shinyfocus/reference/on_focus_change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Respond when input changes focus — on_focus_change","text":"id ID string input. handler_expr expression trigger whenever specified input changes focus. expression quoted executed calling environment. ... Arguments passed shiny::observeEvent label label observer reactive, useful debugging. suspended TRUE, start observer suspended state. FALSE (default), start non-suspended state. autoDestroy TRUE (default), observer automatically destroyed domain () ends. ignoreNULL Whether action triggered (value calculated, case eventReactive) input event expression NULL. See Details. Whether observeEvent immediately destroyed first time code handlerExpr run. pattern useful want subscribe event happen . change_on character indicating whether observer update input becomes focused /input becomes blurred. priority integer controls priority observer executed. often makes sense priority high avoid conflicts. session session (aka domain) observer created executed. default almost always desired.","code":""},{"path":"https://r4ds.github.io/shinyfocus/reference/on_focus_change.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Respond when input changes focus — on_focus_change","text":"shiny observer (see shiny::observe()).","code":""},{"path":[]},{"path":"https://r4ds.github.io/shinyfocus/reference/on_focus_change.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Respond when input changes focus — on_focus_change","text":"","code":"if (interactive()) {   # App 1: A relatively simple ui without modules.   shiny::shinyApp(     ui = shiny::fluidPage(       shinyfocus_js_dependency(),       shiny::textInput(\"input1\", \"Input 1\"),       shiny::textInput(\"input2\", \"Input 2\"),       shiny::actionButton(\"go_button\", \"Go!\"),       shiny::textOutput(\"changing\")     ),     server = function(input, output, session) {       # Update the value in \"changing\" whenever input1 gains or loses focus.       on_focus_change(         \"input1\",         output$changing <- shiny::renderText(           paste(             \"You entered or left input1 at\",             Sys.time()           )         )       )     }   )    # App 2: With module.   changeUI <- function(id) {     shiny::tagList(       shiny::textInput(shiny::NS(id, \"observe_me\"), \"Observe me\"),       shiny::textOutput(NS(id, \"changing\"))     )   }   changeServer <- function(id) {     shiny::moduleServer(id, function(input, output, session) {       on_focus_change(         \"observe_me\",         output$changing <- shiny::renderText(           paste(             \"You entered or left observe_me at\",             Sys.time()           )         )       )     })   }    shiny::shinyApp(     ui = shiny::fluidPage(       shinyfocus_js_dependency(),       changeUI(\"change_module\"),       shiny::textInput(\"another_input\", \"Another input\"),       shiny::actionButton(\"go_button\", \"Go!\")     ),     server = function(input, output, session) {       changeServer(\"change_module\")     }   ) }"},{"path":"https://r4ds.github.io/shinyfocus/reference/shinyfocus_js_dependency.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the shinyfocus JavaScript to shiny — shinyfocus_js_dependency","title":"Add the shinyfocus JavaScript to shiny — shinyfocus_js_dependency","text":"Add shinyfocus.js script shiny app exactly . Adding script setups object used detect changes focus.","code":""},{"path":"https://r4ds.github.io/shinyfocus/reference/shinyfocus_js_dependency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the shinyfocus JavaScript to shiny — shinyfocus_js_dependency","text":"","code":"shinyfocus_js_dependency()"},{"path":"https://r4ds.github.io/shinyfocus/reference/shinyfocus_js_dependency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add the shinyfocus JavaScript to shiny — shinyfocus_js_dependency","text":"htmltools::htmlDependency(), shiny uses add shinyfocus.js script exactly .","code":""},{"path":"https://r4ds.github.io/shinyfocus/reference/shinyfocus_js_dependency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add the shinyfocus JavaScript to shiny — shinyfocus_js_dependency","text":"","code":"shinyfocus_js_dependency() #> List of 10 #>  $ name      : chr \"shinyfocus\" #>  $ version   : chr \"0.0.1\" #>  $ src       :List of 1 #>   ..$ file: chr \"js\" #>  $ meta      : NULL #>  $ script    : chr \"shinyfocus.js\" #>  $ stylesheet: NULL #>  $ head      : NULL #>  $ attachment: NULL #>  $ package   : chr \"shinyfocus\" #>  $ all_files : logi TRUE #>  - attr(*, \"class\")= chr \"html_dependency\""}]
